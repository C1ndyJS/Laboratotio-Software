const flightService = require("../services/flightService");

const login = async (req, res) => {
  const { username, password } = req.body;
  try {
    const token = await flightService.login(username, password);
    res.status(200).json({ token });
  } catch (error) {
    res.status(401).json({ error: "Credenciales inválidas" });
  }
};



const register = async (req, res) => {
  const { username, fullName, email, password, gender, idCard } = req.body;

  // Validar datos obligatorios
  if (!username || !fullName || !email || !password || !idCard) {
    return res.status(400).json({ message: "Todos los campos marcados con * son obligatorios" });
  }

  try {
    const newUser = await flightService.register({ username, fullName, email, password, gender, idCard });
    res.status(201).json({ message: "Usuario registrado exitosamente", userId: newUser.insertId });
  } catch (error) {
    console.error("Error al registrar usuario backend:", error);
    res.status(500).json({ message: "Error al registrar el usuario backend" });
  }
};


// Obtener todos los vuelos
const getAllFlights = async (req, res) => {
  try {
    const flights = await flightService.getAllFlights();
    res.status(200).json(flights);
  } catch (error) {
    res.status(500).json({ error: "Error al obtener los vuelos" });
  }
};

// Crear una nueva reserva de vuelo
const createFlight = async (req, res) => {
  const { CodigoVuelo, FechaVuelo, HoraSalida, Origen, Destino, DuracionVuelo, HoraLlegadaLocal, CostoPorPersona, EsInternacional, Estado, CreadoPor } = req.body;

  // Verificar que todos los datos requeridos estén presentes
  if (!CodigoVuelo || !FechaVuelo || !HoraSalida|| !Origen || !Destino || !DuracionVuelo || !HoraLlegadaLocal || !CostoPorPersona || !EsInternacional || !Estado || !CreadoPor) {
    return res.status(400).json({ message: "Datos incompletos" });
  }

  // Validación adicional (ejemplo)
  if (isNaN(costPerPerson)) {
    return res.status(400).json({ message: "El costo por persona debe ser un número válido" });
  }
  
}



module.exports = {
  login,
  register,
  getAllFlights,
  createFlight,
};
